name: Autoâ€‘update update.json on Release

on:
  release:
    types: [published]

jobs:
  update-json:
    runs-on: ubuntu-latest

    steps:
    # 1) Checkout branch main dengan token & full history
    - name: Checkout main branch
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        ref: main
        fetch-depth: 0

    # 2) Ambil info release
    - name: Get Release Info
      id: rel
      uses: actions/github-script@v7
      with:
        script: |
          const r = context.payload.release;
          core.setOutput('version',     r.tag_name);
          core.setOutput('versionCode', new Date(r.published_at)
                                        .toISOString().split('T')[0]
                                        .replace(/-/g,''));
          core.setOutput('zipUrl',      r.assets.find(a=>a.name.endsWith('.zip'))?.browser_download_url||'');
          core.setOutput('releaseType', r.prerelease ? 'BETA' : 'STABLE');
          core.setOutput('changelog',
            (r.body||'')
              .replace(/"/g,'\\"')
              .replace(/\r?\n/g,'\\n')
          );

    # 3) Tulis update.json
    - name: Write update.json
      run: |
        cat > update.json <<EOF
        {
          "version": "${{ steps.rel.outputs.version }}",
          "versionCode": ${{ steps.rel.outputs.versionCode }},
          "zipUrl": "${{ steps.rel.outputs.zipUrl }}",
          "releaseType": "${{ steps.rel.outputs.releaseType }}",
          "changelog": "${{ steps.rel.outputs.changelog }}"
        }
        EOF

    # 4) Commit & Push hanya jika ada perubahan
    - name: Commit & Push if changed
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        git config user.name  "github-actions[bot]"
        git config user.email "github-actions[bot]@users.noreply.github.com"
        git add update.json

        if git diff --cached --quiet; then
          echo "âœ… update.json already upâ€‘toâ€‘date, nothing to commit."
        else
          git commit -m "ðŸ”„ Autoâ€‘update update.json for ${{ steps.rel.outputs.version }}"
          git push origin main
        fi
