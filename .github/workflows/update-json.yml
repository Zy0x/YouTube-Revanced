# .github/workflows/update-json.yml
name: Update JSON on Release

on:
  release:
    types: [published]

jobs:
  update-json:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          persist-credentials: false

      - name: Get Release Info
        id: release
        uses: actions/github-script@v7
        with:
          script: |
            const release = context.payload.release;
            const tag = release.tag_name;
            const versionCode = new Date(release.published_at).toISOString().split('T')[0].replace(/-/g, '');
            const zipUrl = release.assets.find(a => a.name.endsWith('.zip'))?.browser_download_url || '';
            const releaseType = release.prerelease ? "BETA" : "STABLE";
            const changelog = release.body || '';

            core.setOutput("version", tag);
            core.setOutput("versionCode", versionCode);
            core.setOutput("zipUrl", zipUrl);
            core.setOutput("releaseType", releaseType);
            core.setOutput("changelog", changelog.replace(/"/g, '\\"').replace(/\r?\n/g, "\\n"));

      - name: Write update.json
        run: |
          cat <<EOF > update.json
          {
            "version": "${{ steps.release.outputs.version }}",
            "versionCode": ${{ steps.release.outputs.versionCode }},
            "zipUrl": "${{ steps.release.outputs.zipUrl }}",
            "releaseType": "${{ steps.release.outputs.releaseType }}",
            "changelog": "${{ steps.release.outputs.changelog }}"
          }
          EOF

      - name: Commit and Push update.json
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add update.json
          git commit -m "Update update.json for release ${{ steps.release.outputs.version }}" || echo "No changes to commit"
          git push origin HEAD
